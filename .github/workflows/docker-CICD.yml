name: CI/CD Docker

on:
  push:
    branches:
      - main       
      - develop    
      - test       

env:
  IMAGE_NAME: matheo2004/monapp

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME:${{ github.ref_name }} -f api/Dockerfile .
          docker push $IMAGE_NAME:${{ github.ref_name }}


  deploy_dev:
    needs: build 
    if: github.ref_name == 'develop'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Deploy DEV with Docker Compose
        run: docker compose -f api/docker-compose.dev.yml up -d --build

  deploy_test:
    needs: build
    if: github.ref_name == 'test'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Run Tests with Docker Compose
        run: |
          docker compose -f api/docker-compose.test.yml up -d --build
          docker compose -f api/docker-compose.test.yml down

  deploy-production:
    needs: build .
    runs-on: ubuntu-latest
    environment:
      name: production
      url: http://34.239.25.180:3000
    if: github.ref_name == 'main'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/collaboratif-cda24-2/resource-guardian-dashboard:main
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}
      - run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
          cd prod && \
          echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u ${{ github.actor }} --password-stdin && \
